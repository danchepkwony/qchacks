{"version":3,"sources":["images/jukebox.svg","musicHandler/SendMusic.js","components/Project/Project.js","App.js","reportWebVitals.js","index.js"],"names":["window","AudioContext","webkitAudioContext","songs","getMusic","url","Tone","toDestination","axios","get","param","then","results","console","log","catch","Project","className","src","jukebox","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAAe,G,YAAA,IAA0B,qC,yBCGzCA,OAAOC,aAAeD,OAAOC,cAAgBD,OAAOE,mBAC/B,IAAID,aAAzB,IACME,EAAQ,CAAC,oCAiBAC,EAfE,WACf,IAAI,IAAIC,KAAOF,EAAM,CACJ,IAAIG,IAAYD,GAAKE,gBAGpCC,IAAMC,IAAI,6CAA8C,CAAEC,MAAO,QAChEC,MAAK,SAACC,GACLC,QAAQC,IAAIF,MAEbG,MACCF,QAAQC,IAAI,qB,eCAHE,EAZC,WAGZ,OAFAZ,IAGI,qBAAKa,UAAY,UAAjB,SACI,sBAAKA,UAAY,UAAjB,UACI,qBAAKC,IAAKC,IACV,mBAAGF,UAAY,OAAf,gCCEDG,MAXf,WACE,OACE,sBAAKH,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,IACA,qBAAKA,UAAY,oBCIRI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e986fef5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/jukebox.24ba48bf.svg\";","import axios from 'axios';\nimport * as Tone from 'tone';\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\nconst audioContext = new AudioContext();\nconst songs = [\"../music/BeethovenMoonlight1.mp3\"]\n\nconst getMusic = () => {\n  for(var url in songs){\n    const player = new Tone.Player(url).toDestination();\n    \n\n    axios.get(\"https://git.heroku.com/qchacks-jukebox.git\", { param: \"100\"})\n    .then((results) => {\n      console.log(results)\n    })\n    .catch( \n      console.log(\"Error occurred\")\n    );\n  }\n}\n\nexport default getMusic;","import {useEffect} from 'react';\nimport jukebox from '../../images/jukebox.svg';\nimport getMusic from '../../musicHandler/SendMusic';\nimport './Project.css';\n\nconst Project = () => {\n    getMusic();\n\n    return(\n        <div className = \"Project\">\n            <div className = \"Jukebox\">\n                <img src={jukebox}/>\n                <p className = \"song\">Now Playing:</p>\n            </div>\n        </div>);\n}\n\nexport default Project;","import './App.css';\nimport Project from './components/Project/Project';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Quantum Jukebox</h1>\n      <Project />\n      <div className = \"Description\">\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}